Table 1: Country code(PK), country name
Table2: indicator,description, country code(FK),unit,industries (PK)
countrycode(FK), industries(FK), years, average emission per industry (all years/numofyears)

average emission throughout (addition of all years/numbers)


table2: industry industry name

source venv/Scripts/activate  


How to make the result of query appear on he same page.
join statement 

    conn = sqlite3.connect("model/countries.db")
    cur = conn.cursor()
    country_id = cur.execute("SELECT ISO3 FROM countries WHERE CountryName = ?", [country]).fetchone()
    conn.close()
    conn1 = sqlite3.connect("model/industries.db")
    cur=conn1.cursor()
    industries = cur.execute("SELECT IndustryName FROM industries").fetchall()
    conn1.close()
    conn2 = sqlite3.connect("model/emissions.db")
    conn2.row_factory = sqlite3.Row
    cur = conn2.cursor()
    names = cur.execute("SELECT * FROM emissions").fetchone()
    name = names.keys()
    emissions = cur.execute("SELECT * FROM emissions WHERE Country_id=?",country_id).fetchall()
    conn2.close()


    {{url_for('metricsquery')}}

    (country_id[0],industry_id[0])
fig,ax=plt.subplots(figsize=(6,6))
ax=sns.set(style="darkgrid")
# df = sns.load_dataset("penguins")
@app.route('/visualize')
def visualize(): 
    if(len(dataList) > 0):
        plotdata = {'years':['F2008','F2009','F2010','F2011','F2012','F2013','F2014','F2015','F2016','F2017','F2018'],'industries': dataList}
        df = pd.DataFrame(plotdata)
        print(dataList)
        sns.barplot(data=df, x="years", y="industries")
        canvas=FigureCanvas(fig)
        img = io.BytesIO()
        fig.savefig(img)
        img.seek(0)
    else:
        plotdata = {'years': ['F2008','F2009','F2010'], 'industries': [8.77,9.77,5.67]}
        df = pd.DataFrame(plotdata)
        sns.barplot(data=df, x="years", y="industries")
        canvas=FigureCanvas(fig)
        img = io.BytesIO()
        fig.savefig(img)
        img.seek(0)
    return send_file(img,mimetype='img/png')